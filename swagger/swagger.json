{
  "swagger": "2.0",
  "info": {
    "version": "v1",
    "title": "Design"
  },
  "host": "alpha.askia.com",
  "basePath": "/AskiaPortal/Modules/design",
  "schemes": [
    "https"
  ],
  "paths": {
    "/api/Controls": {
      "get": {
        "tags": [
          "Controls"
        ],
        "summary": "Get the list of controls available by the current user.\r\n            \r\nGET: api/Controls",
        "operationId": "Controls_Get",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ControlDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      }
    },
    "/api/Surveys/{surveyId}/Elements": {
      "get": {
        "tags": [
          "Elements"
        ],
        "summary": "Gets the elements in the survey.\r\n            \r\nGET: api/Surveys/{surveyId}/Elements",
        "operationId": "Elements_Get",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "ID of the survey the elements belong to.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ElementDto"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      }
    },
    "/api/Surveys/{surveyId}/Elements/{elementId}": {
      "get": {
        "tags": [
          "Elements"
        ],
        "summary": "Gets an element in the survey.\r\n            \r\nGET: api/Surveys/{surveyId}/Elements/{elementId}",
        "operationId": "Elements_Get",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "ID of the survey the element belongs to.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "elementId",
            "in": "path",
            "description": "ID of the element.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ElementDto"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Elements"
        ],
        "summary": "Updates a element from a given survey by specifying by its unique \r\nidentfier and with the specified input values.\r\n            \r\nPUT: api/Surveys/5/Elements/2",
        "operationId": "Elements_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "The unique identifier of the survey to which the element belongs.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "elementId",
            "in": "path",
            "description": "The unique identifier of the element to update.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "elementInput",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ElementDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ElementDto"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Elements"
        ],
        "summary": "Delete an element from a given survey by specifying by its unique \r\nidentfier.\r\n            \r\nDELETE: api/Surveys/5/Elements/2",
        "operationId": "Elements_Delete",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "The unique identifier of the survey to which the element belongs.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "elementId",
            "in": "path",
            "description": "The unique identifier of the element to delete.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      }
    },
    "/api/Surveys/{surveyId}/Elements/ContainsQuestion/{questionId}": {
      "get": {
        "tags": [
          "Elements"
        ],
        "summary": "Gets the elements associated with a question.\r\n            \r\nGET: api/Surveys/{surveyId}/Elements/ContainsQuestion/{questionId}",
        "operationId": "Elements_GetByQuestionId",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "ID of the survey the elements belong to.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "questionId",
            "in": "path",
            "description": "ID of the question the elements are associated with.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ElementDto"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      }
    },
    "/api/Surveys/{surveyId}/Elements/New": {
      "post": {
        "tags": [
          "Elements"
        ],
        "summary": "Creates a new element in a given survey.\r\n            \r\nPOST: api/Surveys/{surveyId}/elements/New",
        "operationId": "Elements_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "The unique identifier of the survey to which the element is being created.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "elementDto",
            "in": "body",
            "description": "DTO of the new element to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ElementDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ElementDto"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      }
    },
    "/api/Surveys/{surveyId}/Elements/Move": {
      "put": {
        "tags": [
          "Elements"
        ],
        "summary": "Moves an element in the survey.\r\n            \r\nPUT: api/Surveys/{surveyId}/Elements/Move",
        "operationId": "Elements_PutMove",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "ID of the survey the question belongs to.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "elementMoveDto",
            "in": "body",
            "description": "ID of the element to move.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ElementMoveDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ElementDto"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      }
    },
    "/api/Languages": {
      "get": {
        "tags": [
          "Languages"
        ],
        "summary": "Gets the known languages.\r\n            \r\nGET: api/Languages",
        "operationId": "Languages_Get",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LanguageDto"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      }
    },
    "/api/Languages/{languageId}": {
      "get": {
        "tags": [
          "Languages"
        ],
        "summary": "Gets a known language.\r\n            \r\nGET: api/Languages/{languageId}",
        "operationId": "Languages_Get",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "languageId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LanguageDto"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      }
    },
    "/api/PageTemplates": {
      "get": {
        "tags": [
          "PageTemplates"
        ],
        "summary": "Get the list of page templates available by the current user.\r\n            \r\nGET: api/PageTemplates",
        "operationId": "PageTemplates_Get",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PageTemplateDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      }
    },
    "/api/Preferences": {
      "get": {
        "tags": [
          "Preferences"
        ],
        "summary": "Gets the settings of the current user.\r\n            \r\nGET: api/Preferences",
        "operationId": "Preferences_Get",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PreferencesDto"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Preferences"
        ],
        "summary": "Updates the settings of the current user.\r\n            \r\nPUT: api/Preferences",
        "operationId": "Preferences_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dto",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PreferencesDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PreferencesDto"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      }
    },
    "/api/Preview": {
      "get": {
        "tags": [
          "Preview"
        ],
        "operationId": "Preview_Get",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "templateId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "surveyContract",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Stream"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      }
    },
    "/api/Preview/Survey/{surveyId}/Question/{questionId}": {
      "get": {
        "tags": [
          "Preview"
        ],
        "summary": "Gets HTML preview for the page containing a specified question.\r\n            \r\nGET: api/Preview?surveyId=1questionId=99",
        "operationId": "Preview_Get",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "ID of the survey the question belongs to.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "questionId",
            "in": "path",
            "description": "ID of the question.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Stream"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      }
    },
    "/api/surveys/{surveyId}/Publish": {
      "post": {
        "tags": [
          "Publish"
        ],
        "summary": "Publishes a survey to the first CcaWebApi server (ordered by Id) associated with the user.\r\n            \r\nPOST: api/survey/{surveyId}/Publish",
        "operationId": "Publish_PublishSurveySimple",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SurveyTaskDto"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      }
    },
    "/api/Publish": {
      "post": {
        "tags": [
          "Publish"
        ],
        "operationId": "Publish_CreateSurveyTaskDto",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyTask",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SurveyTask"
            }
          },
          {
            "name": "serverId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/IReturnValue[SurveyTaskDto]"
            }
          }
        }
      }
    },
    "/api/Surveys/{surveyId}/Questions": {
      "get": {
        "tags": [
          "Questions"
        ],
        "summary": "Gets the questions in the survey.\r\n            \r\nGET: api/Surveys/{surveyId}/Questions",
        "operationId": "Questions_Get",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "ID of the survey the questions belong to.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/QuestionDto"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      }
    },
    "/api/Surveys/{surveyId}/Questions/{questionId}": {
      "get": {
        "tags": [
          "Questions"
        ],
        "summary": "Gets a question in the survey.\r\n            \r\nGET: api/Surveys/{surveyId}/Questions/{questionId}",
        "operationId": "Questions_Get",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "ID of the survey the question belongs to.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "questionId",
            "in": "path",
            "description": "ID of the question to return.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuestionDto"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Questions"
        ],
        "summary": "Updates a question in the survey.\r\n            \r\nPUT: api/Surveys/{surveyId}/Questions/{questionId}",
        "operationId": "Questions_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "ID of the survey the question belongs to.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "questionId",
            "in": "path",
            "description": "ID of the question to update.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "questionDto",
            "in": "body",
            "description": "DTO of the question to update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QuestionDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuestionDto"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Questions"
        ],
        "summary": "Deletes a question sub-tree in the survey, including all of its descendants.\r\n            \r\nDELETE: api/Surveys/{surveyId}/Questions/{questionId}",
        "operationId": "Questions_Delete",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "ID of the survey the question belongs to.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "questionId",
            "in": "path",
            "description": "ID of the question to delete.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      }
    },
    "/api/Surveys/{surveyId}/Questions/New": {
      "post": {
        "tags": [
          "Questions"
        ],
        "summary": "Creates a single question in the survey.\r\n            \r\nPOST: api/Surveys/{surveyId}/Questions/New",
        "operationId": "Questions_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "ID of the survey the question will be created in.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "questionDto",
            "in": "body",
            "description": "DTO of the question to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QuestionDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/QuestionDto"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      }
    },
    "/api/Surveys/{surveyId}/Questions/Move": {
      "put": {
        "tags": [
          "Questions"
        ],
        "summary": "Moves a set of questions in the survey.\r\n            \r\nPUT: api/Surveys/{surveyId}/Questions/Move",
        "operationId": "Questions_PutMove",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "ID of the survey the question belongs to.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "questionsMoveDto",
            "in": "body",
            "description": "IDs of the questions to move.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QuestionsMoveDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/QuestionDto"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      }
    },
    "/api/Surveys/{surveyId}/Questions/Indent": {
      "put": {
        "tags": [
          "Questions"
        ],
        "summary": "Indents a set of questions in the survey.\r\n            \r\nPUT: api/Surveys/{surveyId}/Questions/Indent",
        "operationId": "Questions_PutIndent",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "ID of the survey the questions belongs to.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "questionIds",
            "in": "body",
            "description": "IDs of the responses to indent.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "format": "int32",
                "type": "integer"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/QuestionDto"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      }
    },
    "/api/Surveys/{surveyId}/Questions/Unindent": {
      "put": {
        "tags": [
          "Questions"
        ],
        "summary": "Unindents a set of questions in the survey.\r\n            \r\nPUT: api/Surveys/{surveyId}/Questions/Unindent",
        "operationId": "Questions_PutUnindent",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "ID of the survey the questions belongs to.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "questionIds",
            "in": "body",
            "description": "IDs of the questions to unindent.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "format": "int32",
                "type": "integer"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/QuestionDto"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      }
    },
    "/api/Surveys/{surveyId}/Questions/Split": {
      "put": {
        "tags": [
          "Questions"
        ],
        "summary": "Splits the question pages for a set of questions in the survey.\r\n            \r\nPUT: api/Surveys/{surveyId}/Questions/Split",
        "operationId": "Questions_PutSplit",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "ID of the survey the question belongs to.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "questionIds",
            "in": "body",
            "description": "IDs of the question to split.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "format": "int32",
                "type": "integer"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/QuestionDto"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      }
    },
    "/api/Surveys/{surveyId}/Questions/Merge": {
      "put": {
        "tags": [
          "Questions"
        ],
        "summary": "Merges the question pages for a set of questions in the survey.\r\n            \r\nPUT: api/Surveys/{surveyId}/Questions/Merge",
        "operationId": "Questions_PutMerge",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "ID of the survey the question belongs to.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "questionIds",
            "in": "body",
            "description": "IDs of the question to merge.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "format": "int32",
                "type": "integer"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/QuestionDto"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      }
    },
    "/api/QuestionTemplates/New": {
      "post": {
        "tags": [
          "QuestionTemplates"
        ],
        "summary": "Creates a new question template with the specified additional values.\r\n            \r\nPOST: api/QuestionTemplates/New",
        "operationId": "QuestionTemplates_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyInput",
            "in": "body",
            "description": "The additional values to add to the new question template to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QuestionTemplateInputDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuestionTemplateOutputDto"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      }
    },
    "/api/QuestionTemplates": {
      "get": {
        "tags": [
          "QuestionTemplates"
        ],
        "summary": "Gets the list of question template available for the current user.\r\n            \r\nGET: api/QuestionTemplates",
        "operationId": "QuestionTemplates_Get",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SurveyInformationOutputDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      }
    },
    "/api/QuestionTemplates/{id}": {
      "get": {
        "tags": [
          "QuestionTemplates"
        ],
        "summary": "Gets the question template with the specified identifier.\r\n            \r\nGET: api/QuestionTemplates/5",
        "operationId": "QuestionTemplates_Get",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the question template to get.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuestionTemplateOutputDto"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "QuestionTemplates"
        ],
        "summary": "Updates a question template specified by its unique identfier and with \r\nthe specified input values.\r\n            \r\nPUT: api/QuestionTemplates/5",
        "operationId": "QuestionTemplates_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the question template to update.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "surveyInput",
            "in": "body",
            "description": "The input values to set for the new question template to update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QuestionTemplateInputDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuestionTemplateOutputDto"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "QuestionTemplates"
        ],
        "summary": "Delete a question template specified by its unique identfier .\r\n            \r\nDELETE: api/QuestionTemplates/5",
        "operationId": "QuestionTemplates_Delete",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      }
    },
    "/api/Surveys/{surveyId}/Resources": {
      "get": {
        "tags": [
          "Resources"
        ],
        "summary": "Get the list of resources in the survey.\r\n            \r\nGET: api/Surveys/{surveyId}/Resources",
        "operationId": "Resources_Get",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "ID of the survey the resources belong to.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceDto"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      }
    },
    "/api/Surveys/{surveyId}/Resources/{resourceId}": {
      "get": {
        "tags": [
          "Resources"
        ],
        "summary": "Get a resource in the survey.\r\n            \r\nGET: api/Surveys/{surveyId}/Resources/{resourceId}",
        "operationId": "Resources_Get",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "ID of the survey the resource belong to.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "resourceId",
            "in": "path",
            "description": "ID of the resource.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResourceDto"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Resources"
        ],
        "summary": "Updates a resource in the survey.\r\n            \r\nPUT: api/Surveys/{surveyId}/Resources/{resourceId}",
        "operationId": "Resources_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "ID of the survey the resource belongs to.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "resourceId",
            "in": "path",
            "description": "ID of the resource to update.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "resourceDto",
            "in": "body",
            "description": "DTO of the resource to update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResourceDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResourceDto"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Resources"
        ],
        "summary": "Deletes a resource in the survey.\r\n            \r\nDELETE: api/Surveys/{surveyId}/Resources/{resourceId}",
        "operationId": "Resources_Delete",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "ID of the survey the resource belong to.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "resourceId",
            "in": "path",
            "description": "ID of the resource.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      }
    },
    "/api/Surveys/{surveyId}/Resources/Upload": {
      "post": {
        "tags": [
          "Resources"
        ],
        "summary": "Creates resources in the survey, one for each file uploaded in the request.\r\n            \r\nPOST: api/Surveys/{surveyId}/Resources",
        "operationId": "Resources_PostBatch",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "ID of the survey the resources will be created in.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceDto"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      }
    },
    "/api/Surveys/{surveyId}/Questions/{targetQuestionId}/ResponseLinks": {
      "get": {
        "tags": [
          "ResponseLinks"
        ],
        "summary": "Gets all the response link of a specified question from a given survey\r\nwith the specified identifiers.\r\n            \r\nGET: api/Surveys/{surveyId}/Questions/1/ResponseLinks?SourceQuestionId=2",
        "operationId": "ResponseLinks_Get",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "The unique identifier of the survey to which the questions belong.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "targetQuestionId",
            "in": "path",
            "description": "The unique identifier of the question to which the response links belong.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sourceQuestionId",
            "in": "query",
            "description": "The unique identifier of the question which targets\r\nthe `targetQuestionId` as link.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResponseLinkOutputDto"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ResponseLinks"
        ],
        "summary": "Updates a list of response link of a specified question from a given\r\nsurvey with the specified identidiers and input values.\r\n            \r\nPUT: api/Surveys/5/Questions/1/ResponseLinks?SourceQuestionId=2",
        "operationId": "ResponseLinks_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "The unique identifier of the survey to which the question belong.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "targetQuestionId",
            "in": "path",
            "description": "The unique identifier of the question to which the response link belong.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sourceQuestionId",
            "in": "query",
            "description": "The unique identifier of the question which targets\r\nthe `targetQuestionId` as link.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "responseLinkInputs",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResponseLinkInptuDto"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResponseLinkOutputDto"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      }
    },
    "/api/Surveys/{surveyId}/Questions/{targetQuestionId}/ResponseLinks/{responseLinkId}": {
      "get": {
        "tags": [
          "ResponseLinks"
        ],
        "summary": "Gets the response link of a specified question from a guven survey\r\nwith the specified identifiers.\r\n            \r\nGET: api/Surveys/5/Questions/1/ResponseLinks/4?SourceQuestionId=2",
        "operationId": "ResponseLinks_Get",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "The unique identifier of the survey to which the question belong.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "targetQuestionId",
            "in": "path",
            "description": "The unique identifier of the question to which the response link belong.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "responseLinkId",
            "in": "path",
            "description": "The unique identifier of the response link to read.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sourceQuestionId",
            "in": "query",
            "description": "The unique identifier of the question which targets\r\nthe `targetQuestionId` as link.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseLinkOutputDto"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ResponseLinks"
        ],
        "summary": "Updates a response link of a specified question from a given survey\r\nwith the specified identidiers and input values.\r\n            \r\nPUT: api/Surveys/5/Questions/1/ResponseLinks/4?SourceQuestionId=2",
        "operationId": "ResponseLinks_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "The unique identifier of the survey to which the question belong.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "targetQuestionId",
            "in": "path",
            "description": "The unique identifier of the question to which the response link belong.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "responseLinkId",
            "in": "path",
            "description": "The unique identifier of the response link to update.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sourceQuestionId",
            "in": "query",
            "description": "The unique identifier of the question which targets\r\nthe `targetQuestionId` as link.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "responseLinkInput",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResponseLinkInptuDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseLinkOutputDto"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      }
    },
    "/api/Surveys/{surveyId}/Questions/{questionId}/Responses": {
      "get": {
        "tags": [
          "Responses"
        ],
        "summary": "Gets the responses in the question.\r\n            \r\nGET: api/Surveys/{surveyId}/Questions/{questionId}/Responses",
        "operationId": "Responses_Get",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "ID of the survey the question belongs to.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "questionId",
            "in": "path",
            "description": "ID of the question the responses belong to.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResponseDto"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Responses"
        ],
        "summary": "Updates multiple responses in the survey.\r\n            \r\nPUT: api/Surveys/{surveyId}/Questions/{questionId}/Responses",
        "operationId": "Responses_PutBatch",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "ID of the survey the response will be updated in.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "questionId",
            "in": "path",
            "description": "ID of the question the responses belong to.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "responseDtos",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResponseDto"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResponseDto"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Responses"
        ],
        "summary": "Creates multiple responses in the survey question.\r\n            \r\nPOST: api/Surveys/{surveyId}/Questions/{questionId}/Responses",
        "operationId": "Responses_PostBatch",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "ID of the survey the response will be created in.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "questionId",
            "in": "path",
            "description": "ID of the question the response will be created in.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "responseDtos",
            "in": "body",
            "description": "DTOs of the responses to create.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResponseDto"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResponseDto"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Responses"
        ],
        "summary": "Deletes a set of responses in the survey.\r\n            \r\nDELETE: api/Surveys/{surveyId}/Questions/{questionId}/Responses",
        "operationId": "Responses_DeleteBatch",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "ID of the survey the responses belongs to.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "questionId",
            "in": "path",
            "description": "ID of the question the responses belongs to.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "responseIds",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "format": "int32",
                "type": "integer"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "format": "int32",
                "type": "integer"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      }
    },
    "/api/Surveys/{surveyId}/Questions/{questionId}/Responses/{responseId}": {
      "get": {
        "tags": [
          "Responses"
        ],
        "summary": "Gets a response in the survey.\r\n            \r\nGET: api/Surveys/{surveyId}/Questions/{questionId}/Responses/{responseId}",
        "operationId": "Responses_Get",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "ID of the survey the response belongs to.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "questionId",
            "in": "path",
            "description": "ID of the question the response belongs to.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "responseId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseDto"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Responses"
        ],
        "summary": "Updates a response in the survey.\r\n            \r\nPUT: api/Surveys/{surveyId}/Questions/{questionId}/Responses/{responseId}",
        "operationId": "Responses_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "ID of the survey the response will be updated in.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "questionId",
            "in": "path",
            "description": "ID of the question the responses belong to.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "responseId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "responseDto",
            "in": "body",
            "description": "DTO of the response to update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResponseDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResponseDto"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Responses"
        ],
        "summary": "Deletes a response in the survey.\r\n            \r\nDELETE: api/Surveys/{surveyId}/Questions/{questionId}/Responses/{responseId}",
        "operationId": "Responses_Delete",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "ID of the survey the response belongs to.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "questionId",
            "in": "path",
            "description": "ID of the question the response belongs to.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "responseId",
            "in": "path",
            "description": "ID of the response to delete.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      }
    },
    "/api/Surveys/{surveyId}/Questions/{questionId}/Responses/New": {
      "post": {
        "tags": [
          "Responses"
        ],
        "summary": "Creates a single response in the survey question.\r\n            \r\nPOST: api/Surveys/{surveyId}/Questions/{questionId}/Responses/New",
        "operationId": "Responses_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "ID of the survey the response will be created in.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "questionId",
            "in": "path",
            "description": "ID of the question the response will be created in.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "responseDto",
            "in": "body",
            "description": "DTO of the response to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResponseDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResponseDto"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      }
    },
    "/api/Surveys/{surveyId}/Questions/{questionId}/Responses/Move": {
      "put": {
        "tags": [
          "Responses"
        ],
        "summary": "Moves a responses in the question.\r\n            \r\nPUT: api/Surveys/{surveyId}/Questions/{questionId}/Responses/Move",
        "operationId": "Responses_PutMove",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "ID of the survey the responses belongs to.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "questionId",
            "in": "path",
            "description": "ID of the question the responses belong to.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "responsesMoveDto",
            "in": "body",
            "description": "IDs of the responses to move.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResponsesMoveDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResponsesMoveDto"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      }
    },
    "/api/Surveys/{surveyId}/Questions/{questionId}/Responses/Indent": {
      "put": {
        "tags": [
          "Responses"
        ],
        "summary": "Indents a set of responses in the survey.\r\n            \r\nPUT: api/Surveys/{surveyId}/Questions/{questionId}/Responses/Indent",
        "operationId": "Responses_PutIndent",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "ID of the survey the responses belongs to.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "questionId",
            "in": "path",
            "description": "ID of the question the responses belong to.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "responseIds",
            "in": "body",
            "description": "IDs of the responses to indent.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "format": "int32",
                "type": "integer"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResponseDto"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      }
    },
    "/api/Surveys/{surveyId}/Questions/{questionId}/Responses/Unindent": {
      "put": {
        "tags": [
          "Responses"
        ],
        "summary": "Unindents a set of responses in the survey.\r\n            \r\nPUT: api/Surveys/{surveyId}/Questions/{questionId}/Responses/Unindent",
        "operationId": "Responses_PutUnindent",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "ID of the survey the responses belongs to.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "questionId",
            "in": "path",
            "description": "ID of the question the responses belong to.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "responseIds",
            "in": "body",
            "description": "IDs of the responses to indent.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "format": "int32",
                "type": "integer"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResponseDto"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      }
    },
    "/api/Surveys/{surveyId}/Routings": {
      "get": {
        "tags": [
          "Routings"
        ],
        "summary": "Gets the routings in the survey.\r\n            \r\nGET: api/Surveys/{surveyId}/Routings",
        "operationId": "Routings_Get",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "ID of the survey the routings belong to.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RoutingDto"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Routings"
        ],
        "summary": "Updates routings in a given survey.\r\n            \r\nPUT: api/Surveys/5/Routings",
        "operationId": "Routings_PutBatch",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "The unique identifier of the survey to which the routings belong.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "routingDtos",
            "in": "body",
            "description": "DTOs of the routings to update.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RoutingDto"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RoutingDto"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Routings"
        ],
        "summary": "Creates new routings in a given survey.\r\n            \r\nPOST: api/Surveys/{surveyId}/Routings",
        "operationId": "Routings_PostBatch",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "The unique identifier of the survey in which the routings are being created.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "routingDtos",
            "in": "body",
            "description": "DTOs of the new routings to create.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RoutingDto"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RoutingDto"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Routings"
        ],
        "summary": "Delete a set of routings from a given survey by specifying by their unique identfiers.\r\n            \r\nDELETE: api/Surveys/5/Routings",
        "operationId": "Routings_DeleteBatch",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "The unique identifier of the survey to which the routing belongs.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "routingIds",
            "in": "body",
            "description": "The unique identifiers of the routings to delete.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "format": "int32",
                "type": "integer"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "format": "int32",
                "type": "integer"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      }
    },
    "/api/Surveys/{surveyId}/Routings/{routingId}": {
      "get": {
        "tags": [
          "Routings"
        ],
        "summary": "Gets a routing in the survey.\r\n            \r\nGET: api/Surveys/{surveyId}/Routings/{routingId}",
        "operationId": "Routings_Get",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "ID of the survey the routings belong to.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "routingId",
            "in": "path",
            "description": "ID of the routing to return.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RoutingDto"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Routings"
        ],
        "summary": "Updates a routing from a given survey by specifying by its unique \r\nidentfier and with the specified input values.\r\n            \r\nPUT: api/Surveys/5/Routings/2",
        "operationId": "Routings_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "The unique identifier of the survey to which the routing belongs.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "routingId",
            "in": "path",
            "description": "The unique identifier of the routing to update.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "routingInput",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RoutingDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RoutingDto"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Routings"
        ],
        "summary": "Delete a routing from a given survey by specifying by its unique \r\nidentfier.\r\n            \r\nDELETE: api/Surveys/5/Routings/2",
        "operationId": "Routings_Delete",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "The unique identifier of the survey to which the routing belongs.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "routingId",
            "in": "path",
            "description": "The unique identifier of the routing to delete.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      }
    },
    "/api/Surveys/{surveyId}/Routings/{routingId}/Compile": {
      "get": {
        "tags": [
          "Routings"
        ],
        "summary": "Gets the result of compiling a routing.\r\n            \r\nGET: api/Surveys/{surveyId}/Routings/{routingId}/Compile",
        "operationId": "Routings_GetRoutingCompilationResult",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "ID of the survey the routing belong to.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "routingId",
            "in": "path",
            "description": "ID of the routing to compile.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MethodResultDto"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      }
    },
    "/api/Surveys/{surveyId}/Routings/Compile": {
      "get": {
        "tags": [
          "Routings"
        ],
        "summary": "Gets the result of compiling a script without needing a routing.\r\n            \r\nGET: api/Surveys/{surveyId}/Routings/Compile",
        "operationId": "Routings_GetConditionScriptCompilationResult",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "ID of the survey.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "type",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "enum": [
              0,
              1,
              2,
              -1
            ]
          },
          {
            "name": "script",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MethodResultDto"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      }
    },
    "/api/Surveys/{surveyId}/Routings/AssistedScriptToAdvanced": {
      "post": {
        "tags": [
          "Routings"
        ],
        "summary": "Converts an assisted script to advanced without needing a routing.\r\n            \r\nGET: api/Surveys/{surveyId}/Routings/AssistedScriptToAdvanced",
        "operationId": "Routings_AssistedScriptToAdvanced",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "ID of the survey.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "script",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      }
    },
    "/api/Surveys/{surveyId}/Routings/AdvancedScriptToAssisted": {
      "post": {
        "tags": [
          "Routings"
        ],
        "summary": "Converts an advanced script to assisted without needing a routing.\r\n            \r\nGET: api/Surveys/{surveyId}/Routings/AdvandcedScriptToAssisted",
        "operationId": "Routings_AdvandcedScriptToAssisted",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "ID of the survey.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "script",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      }
    },
    "/api/Surveys/{surveyId}/Routings/New": {
      "post": {
        "tags": [
          "Routings"
        ],
        "summary": "Creates a new routing in a given survey.\r\n            \r\nPOST: api/Surveys/{surveyId}/routings/New",
        "operationId": "Routings_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "The unique identifier of the survey to which the routing is being created.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "routingDto",
            "in": "body",
            "description": "DTO of the new routing to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RoutingDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RoutingDto"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      }
    },
    "/api/Surveys/{surveyId}/Routings/{routingId}/Targets": {
      "delete": {
        "tags": [
          "Routings"
        ],
        "summary": "Delete targets for a routing from a given survey.\r\n            \r\nDELETE: api/Surveys/5/Routings/2/Targets",
        "operationId": "Routings_DeleteRoutingTargets",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "The unique identifier of the survey to which the routing belongs.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "routingId",
            "in": "path",
            "description": "The unique identifier of the routing containing the targets to delete.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      }
    },
    "/api/Surveys/{surveyId}/Routings/Move": {
      "put": {
        "tags": [
          "Routings"
        ],
        "summary": "Moves a set of routings in the survey.\r\n            \r\nPUT: api/Surveys/{surveyId}/Routings/Move",
        "operationId": "Routings_PutMove",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "ID of the survey the question belongs to.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "routingsMoveDto",
            "in": "body",
            "description": "DTO containing IDs of the routings to move and their target position.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RoutingsMoveDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RoutingDto"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      }
    },
    "/api/Surveys/{surveyId}/ScenarioEntities": {
      "get": {
        "tags": [
          "ScenarioEntities"
        ],
        "summary": "Gets all the scenario entities with the specified identifiers.\r\n            \r\nGET: api/Surveys/5/ScenarioEntities",
        "operationId": "ScenarioEntities_Get",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "The unique identifier of the survey to which the question belong.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ScenarioEntityOutputDto"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      },
      "post": {
        "tags": [
          "ScenarioEntities"
        ],
        "summary": "Creates multiple scenario entities with the specified input values.\r\n            \r\nPOST: api/Surveys/5/ScenarioEntities",
        "operationId": "ScenarioEntities_PostBatch",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "The unique identifier of the survey to which the question belong.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "inputs",
            "in": "body",
            "description": "The input values for each scenario entity to create.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ScenarioEntityInputDto"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ScenarioEntityOutputDto"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ScenarioEntities"
        ],
        "summary": "Deletes multiple scenario entities with the specified identifiers.\r\n            \r\nDELETE: api/Surveys/5/ScenarioEntities",
        "operationId": "ScenarioEntities_DeleteBatch",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "The unique identifier of the survey to which the scenario belongs.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "inputs",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ScenarioEntityInputDto"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      }
    },
    "/api/Surveys/{surveyId}/ScenarioEntities/{scenarioId}": {
      "get": {
        "tags": [
          "ScenarioEntities"
        ],
        "operationId": "ScenarioEntities_Get",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "scenarioId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "entityType",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "entityId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ScenarioEntityOutputDto"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ScenarioEntities"
        ],
        "summary": "Deletes a scenario entity with the specified identifiers.\r\n            \r\nDELETE: api/Surveys/5/ScenarioEntities/2",
        "operationId": "ScenarioEntities_Delete",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "The unique identifier of the survey to which the scenario belongs.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "scenarioId",
            "in": "path",
            "description": "The unique identifier of the scenario from which the scenario entity\r\nto delete belongs.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "entityType",
            "in": "query",
            "description": "The type of the entity linked to the scenario.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "entityId",
            "in": "query",
            "description": "The unique identifier of the entity linked to the scenario.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      }
    },
    "/api/Surveys/{surveyId}/ScenarioEntities/New": {
      "post": {
        "tags": [
          "ScenarioEntities"
        ],
        "summary": "Creates a scenario entity with the specified identidiers and input values.\r\n            \r\nPOST: api/Surveys/5/ScenarioEntities/New",
        "operationId": "ScenarioEntities_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "The unique identifier of the survey to which the question belong.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ScenarioEntityInputDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ScenarioEntityOutputDto"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      }
    },
    "/api/Surveys/{surveyId}/Scenarios": {
      "get": {
        "tags": [
          "Scenarios"
        ],
        "summary": "Gets the scenarios in the survey.\r\n            \r\nGET: api/Surveys/{surveyId}/Scenarios",
        "operationId": "Scenarios_Get",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "ID of the survey the questions belong to.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ScenarioOutputDto"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Scenarios"
        ],
        "summary": "Delete multiple scenarios from a given survey.\r\n            \r\nDELETE: api/Surveys/5/Scenarios",
        "operationId": "Scenarios_DeleteBatch",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "The unique identifier of the survey to which the scenario belongs.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "scenarioIds",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "format": "int32",
                "type": "integer"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      }
    },
    "/api/Surveys/{surveyId}/Scenarios/{scenarioId}": {
      "get": {
        "tags": [
          "Scenarios"
        ],
        "summary": "Gets the scenario from a given survey with the specified identifier.\r\n            \r\nGET: api/Surveys/5/Scenarios/2",
        "operationId": "Scenarios_Get",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "The unique identifier of the survey to which the scenario belongs.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "scenarioId",
            "in": "path",
            "description": "The unique identifier of the scenario to read.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ScenarioOutputDto"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Scenarios"
        ],
        "summary": "Updates a scenario from a given survey by specifying by its unique \r\nidentfier and with the specified input values.\r\n            \r\nPUT: api/Surveys/5/Scenarios/2",
        "operationId": "Scenarios_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "The unique identifier of the survey to which the scenario belongs.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "scenarioId",
            "in": "path",
            "description": "The unique identifier of the scenario to update.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "scenarioInput",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ScenarioInputDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ScenarioOutputDto"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Scenarios"
        ],
        "summary": "Delete a scenario from a given survey by specifying by its unique \r\nidentfier.\r\n            \r\nDELETE: api/Surveys/5/Scenarios/2",
        "operationId": "Scenarios_Delete",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "The unique identifier of the survey to which the scenario belongs.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "scenarioId",
            "in": "path",
            "description": "The unique identifier of the scenario to delete.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      }
    },
    "/api/Surveys/{surveyId}/Scenarios/New": {
      "post": {
        "tags": [
          "Scenarios"
        ],
        "summary": "Creates a new scenario to a given survey with the specified additional values.\r\n            \r\nPOST: api/Surveys/{surveyId}/Scenarios/New",
        "operationId": "Scenarios_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "The unique identifier of the survey to which the scenario belongs.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "scenarioInput",
            "in": "body",
            "description": "The additional values to add to the new scenario to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ScenarioInputDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ScenarioOutputDto"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      }
    },
    "/api/Surveys/New": {
      "post": {
        "tags": [
          "Surveys"
        ],
        "summary": "Creates a new survey with the specified additional values.\r\n            \r\nPOST: api/Surveys/New",
        "operationId": "Surveys_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyInput",
            "in": "body",
            "description": "The additional values to add to the new survey to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SurveyInputDto[ISurvey]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SurveyOutputDto[ISurvey]"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      }
    },
    "/api/Surveys/FromSurveyTemplate/{id}": {
      "post": {
        "tags": [
          "Surveys"
        ],
        "summary": "Creates a survey from with the specified AskiaCore survey template \r\nunique identifier.\r\n            \r\nPOST: api/Surveys/CreateFromSurveyTemplate/5",
        "operationId": "Surveys_FromSurveyTemplate",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The AskiaCore survey template unique identifier from which \r\nto generate the survey.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "value",
            "in": "body",
            "description": "The additional values to add to the new survey to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SurveyInputDto[ISurvey]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      }
    },
    "/api/Surveys/{surveyId}/Texts": {
      "get": {
        "tags": [
          "Surveys"
        ],
        "summary": "Gets the texts of a survey.\r\n            \r\nGET: api/Surveys/5/Texts -&gt; returns texts in all languages of the survey\r\nGET: api/Surveys/5/Texts?languageIds=1036,2057 -&gt; returns texts for only the specified languages of the survey",
        "operationId": "Surveys_GetTexts",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "The unique identifier of the survey.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "languageIds",
            "in": "query",
            "description": "The comma-delimited list of language IDs to retrieve texts for. Optional.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Stream"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Surveys"
        ],
        "summary": "Sets the texts of a survey.\r\n            \r\nGET: api/Surveys/5/Texts -&gt; sets texts of the survey using the supplied CSV file",
        "operationId": "Surveys_PutTexts",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "The unique identifier of the survey.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SurveyOutputDto[ISurvey]"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      }
    },
    "/api/Surveys": {
      "get": {
        "tags": [
          "Surveys"
        ],
        "summary": "Gets the list of surveys available for the current user.\r\n            \r\nGET: api/Surveys",
        "operationId": "Surveys_Get",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SurveyInformationOutputDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      }
    },
    "/api/Surveys/{id}": {
      "get": {
        "tags": [
          "Surveys"
        ],
        "summary": "Gets the survey with the specified identifier.\r\n            \r\nGET: api/Surveys/5",
        "operationId": "Surveys_Get",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the survey to get.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SurveyOutputDto[ISurvey]"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Surveys"
        ],
        "summary": "Updates a survey specified by its unique identfier and with \r\nthe specified input values.\r\n            \r\nPUT: api/Surveys/5",
        "operationId": "Surveys_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the survey to update.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "surveyInput",
            "in": "body",
            "description": "The input values to set for the new survey to update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SurveyInputDto[ISurvey]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SurveyOutputDto[ISurvey]"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Surveys"
        ],
        "summary": "Delete a survey specified by its unique identfier .\r\n            \r\nDELETE: api/Surveys/5",
        "operationId": "Surveys_Delete",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      }
    },
    "/api/SurveyTemplates/New": {
      "post": {
        "tags": [
          "SurveyTemplates"
        ],
        "summary": "Creates a new survey template with the specified additional values.\r\n            \r\nPOST: api/SurveyTemplates/New",
        "operationId": "SurveyTemplates_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyInput",
            "in": "body",
            "description": "The additional values to add to the new survey template to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SurveyTemplateInputDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SurveyTemplateOutputDto"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      }
    },
    "/api/SurveyTemplates": {
      "get": {
        "tags": [
          "SurveyTemplates"
        ],
        "summary": "Gets the list of survey templates available for the current user.\r\n            \r\nGET: api/SurveyTemplates",
        "operationId": "SurveyTemplates_Get",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SurveyInformationOutputDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      }
    },
    "/api/SurveyTemplates/{id}": {
      "get": {
        "tags": [
          "SurveyTemplates"
        ],
        "summary": "Gets the survey template with the specified identifier.\r\n            \r\nGET: api/SurveyTemplates/5",
        "operationId": "SurveyTemplates_Get",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the survey to get.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SurveyTemplateOutputDto"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "SurveyTemplates"
        ],
        "summary": "Updates a survey template specified by its unique identfier and with \r\nthe specified input values.\r\n            \r\nPUT: api/SurveyTemplates/5",
        "operationId": "SurveyTemplates_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the survey template to update.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "surveyInput",
            "in": "body",
            "description": "The input values to set for the new survey template to update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SurveyTemplateInputDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SurveyTemplateOutputDto"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SurveyTemplates"
        ],
        "summary": "Delete a survey template specified by its unique identfier .\r\n            \r\nDELETE: api/SurveyTemplates/5",
        "operationId": "SurveyTemplates_Delete",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      }
    },
    "/api/Test/Survey/{surveyId}": {
      "get": {
        "tags": [
          "Test"
        ],
        "operationId": "Test_Get",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "surveyType",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "action",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "interviewSeed",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Stream"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Test"
        ],
        "operationId": "Test_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "surveyType",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "action",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "interviewSeed",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "formValues",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/KeyValuePair[String,String]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Stream"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      }
    },
    "/api/Themes": {
      "get": {
        "tags": [
          "Themes"
        ],
        "summary": "Get the list of themes available by the current user.\r\n            \r\nGET: api/Themes",
        "operationId": "Themes_Get",
        "consumes": [

        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ThemeOutputDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AskiaPortalHttpError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ControlDto": {
      "type": "object",
      "properties": {
        "allowedQuestionTypes": {
          "description": "Specifies a list of the AskiaCore.QuestionType values identifying \r\nthe types of questions that the control is valid for.",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "id": {
          "format": "int32",
          "description": "Specifies the unique identifier of the extenstion.",
          "type": "integer"
        },
        "name": {
          "description": "Specifies the name of the extension.",
          "type": "string"
        },
        "properties": {
          "description": "Specifies a list of AskiaDesign ExtensionProperty associated \r\nwith this AskiaDesign Extension.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtensionPropertyDto"
          }
        }
      }
    },
    "ExtensionPropertyDto": {
      "type": "object",
      "properties": {
        "defaultValue": {
          "description": "Specifies the default value of the ExtensionProperty.",
          "type": "string"
        },
        "description": {
          "description": "Specifies a textual description of the ExtensionProperty.",
          "type": "string"
        },
        "group": {
          "description": "Specifies to which group the ExtensionProperty belongs to.",
          "type": "string"
        },
        "id": {
          "description": "Specifies the unique identifier of the ExtensionProperty.",
          "type": "string"
        },
        "name": {
          "description": "Specifies the name of the ExtensionProperty.",
          "type": "string"
        },
        "options": {
          "description": "Specifies the options of the property if the ExtensionProperty \r\ntype is a list.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtensionPropertyOptionDto"
          }
        },
        "type": {
          "description": "Specifies the type of the ExtensionProperty.",
          "type": "string"
        }
      }
    },
    "ExtensionPropertyOptionDto": {
      "type": "object",
      "properties": {
        "text": {
          "description": "Specifies AskiaDesign ExtensionPropertyOption display name.",
          "type": "string"
        },
        "value": {
          "description": "Specifies AskiaDesign ExtensionPropertyOption value field.",
          "type": "string"
        }
      }
    },
    "AskiaPortalHttpError": {
      "type": "object",
      "properties": {
        "code": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "defaultMessage": {
          "type": "string",
          "readOnly": true
        },
        "key": {
          "type": "string",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ElementDto": {
      "type": "object",
      "properties": {
        "afterEnd": {
          "description": "???",
          "type": "string"
        },
        "afterStart": {
          "description": "???",
          "type": "string"
        },
        "attributes": {
          "description": "Attributes.",
          "type": "string"
        },
        "beforeEnd": {
          "description": "???",
          "type": "string"
        },
        "beforeStart": {
          "description": "???",
          "type": "string"
        },
        "classes": {
          "description": "CSS classes.",
          "type": "string"
        },
        "controlId": {
          "format": "int32",
          "description": "ID of the control.",
          "type": "integer"
        },
        "extensionProperties": {
          "description": "Properties of the extension (ADC / ADP) associated with the element. Default values are replaced with any custom values set for the element.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "firstChildId": {
          "format": "int32",
          "description": "ID of the first child element.",
          "type": "integer"
        },
        "id": {
          "format": "int32",
          "description": "ID of the element",
          "type": "integer"
        },
        "isDeleted": {
          "description": "Indicates if the element is deleted.",
          "type": "boolean"
        },
        "lastChildId": {
          "format": "int32",
          "description": "ID of the last child element.",
          "type": "integer"
        },
        "nextSiblingId": {
          "format": "int32",
          "description": "ID of the next sibling element.",
          "type": "integer"
        },
        "pageTemplateId": {
          "format": "int32",
          "description": "ID of the page template.",
          "type": "integer"
        },
        "parentId": {
          "format": "int32",
          "description": "ID of the parent element.",
          "type": "integer"
        },
        "position": {
          "format": "int32",
          "description": "Position of the response in its parent's list of child response.",
          "type": "integer"
        },
        "prevSiblingId": {
          "format": "int32",
          "description": "ID of the previous sibling element.",
          "type": "integer"
        },
        "questionId": {
          "format": "int32",
          "description": "ID of the question the element belongs to.",
          "type": "integer"
        },
        "seed": {
          "format": "int32",
          "description": "Client-set value for {Design.Dto.Element.ElementDto.Id} used when creating an element.",
          "type": "integer"
        },
        "style": {
          "description": "Style.",
          "type": "string"
        },
        "type": {
          "format": "int32",
          "description": "Type of the response.",
          "type": "integer"
        }
      }
    },
    "ElementMoveDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "ID of the element.",
          "type": "integer"
        },
        "parentId": {
          "format": "int32",
          "description": "Id of the target parent element.",
          "type": "integer"
        },
        "prevSiblingId": {
          "format": "int32",
          "description": "Id of existing child element of the parent element that will immediately precede the element being moved.",
          "type": "integer"
        }
      }
    },
    "LanguageDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "ID of the language.",
          "type": "integer"
        },
        "localName": {
          "description": "Localised name of the language.",
          "type": "string"
        }
      }
    },
    "PageTemplateDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "Specifies the unique identifier of the extenstion.",
          "type": "integer"
        },
        "name": {
          "description": "Specifies the name of the extension.",
          "type": "string"
        },
        "properties": {
          "description": "Specifies a list of AskiaDesign ExtensionProperty associated \r\nwith this AskiaDesign Extension.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtensionPropertyDto"
          }
        }
      }
    },
    "PreferencesDto": {
      "type": "object",
      "properties": {
        "defaultControls": {
          "description": "Specifies the properties of the ADCs extension associated \r\nwith the survey for each question type. Default values are \r\nreplaced with any custom values set for the survey.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/DefaultControlDto"
          }
        },
        "lastOpenSurveyId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "DefaultControlDto": {
      "type": "object",
      "properties": {
        "controlId": {
          "format": "int32",
          "description": "Gets or sets the unique identifer of the control.",
          "type": "integer"
        },
        "properties": {
          "description": "Gets or sets the properties of the control associated with \r\nthe default control. Default values are replaced with any \r\ncustom values set for the default control.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "Stream": {
      "type": "object",
      "properties": {
        "canRead": {
          "type": "boolean",
          "readOnly": true
        },
        "canSeek": {
          "type": "boolean",
          "readOnly": true
        },
        "canTimeout": {
          "type": "boolean",
          "readOnly": true
        },
        "canWrite": {
          "type": "boolean",
          "readOnly": true
        },
        "length": {
          "format": "int64",
          "type": "integer",
          "readOnly": true
        },
        "position": {
          "format": "int64",
          "type": "integer"
        },
        "readTimeout": {
          "format": "int32",
          "type": "integer"
        },
        "writeTimeout": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "SurveyTaskDto": {
      "description": "DTO for a CCA survey task.",
      "type": "object",
      "properties": {
        "dateCreated": {
          "format": "date-time",
          "type": "string"
        },
        "dateModified": {
          "format": "date-time",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "serverId": {
          "format": "int32",
          "type": "integer"
        },
        "surveyTaskId": {
          "format": "int32",
          "type": "integer"
        },
        "webProdUrl": {
          "type": "string"
        }
      }
    },
    "SurveyTask": {
      "type": "object",
      "properties": {
        "appointmentSettings": {
          "$ref": "#/definitions/AppointmentSettings"
        },
        "callbackOptions": {
          "$ref": "#/definitions/CallbackOptions"
        },
        "callResultSettings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CallResultSetting"
          }
        },
        "ccaObjectType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            16,
            17,
            18,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            40,
            41,
            42,
            43,
            71,
            72,
            73,
            91,
            92,
            100,
            101,
            110,
            111,
            112,
            -1
          ],
          "type": "integer"
        },
        "dateCreated": {
          "format": "date-time",
          "type": "string"
        },
        "dateModified": {
          "format": "date-time",
          "type": "string"
        },
        "defaultLanguageID": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "dialingSettings": {
          "$ref": "#/definitions/DialingSettings"
        },
        "feedbackType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskField"
          }
        },
        "id": {
          "format": "int64",
          "type": "integer"
        },
        "interviewFilterBefore": {
          "format": "date-time",
          "type": "string"
        },
        "interviewFilterCallbackBehavior": {
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "interviewStorage": {
          "format": "int32",
          "enum": [
            1,
            2
          ],
          "type": "integer"
        },
        "keepIncompletes": {
          "type": "boolean"
        },
        "listsSettings": {
          "$ref": "#/definitions/ListsSettings"
        },
        "name": {
          "type": "string"
        },
        "objectState": {
          "$ref": "#/definitions/SurveyTaskObjectState"
        },
        "path": {
          "type": "string"
        },
        "progressionType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3
          ],
          "type": "integer"
        },
        "quotaMaximumTargetCount": {
          "format": "int64",
          "type": "integer"
        },
        "quotaMinimumTargetCount": {
          "format": "int64",
          "type": "integer"
        },
        "webConnections": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/WebConnectionSurvey"
          }
        },
        "webSurvey": {
          "type": "boolean"
        },
        "workingDirectory": {
          "type": "string"
        }
      }
    },
    "AppointmentSettings": {
      "type": "object",
      "properties": {
        "allowAppointments": {
          "type": "boolean"
        },
        "allowCallAcknowledgement": {
          "type": "boolean"
        },
        "allowForAgentOnly": {
          "type": "boolean"
        },
        "blankOutAppointments": {
          "type": "boolean"
        },
        "callbackDecrease": {
          "format": "double",
          "type": "number"
        },
        "callbackType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3
          ],
          "type": "integer"
        },
        "ignoreQuotaImportanceMin": {
          "format": "int32",
          "type": "integer"
        },
        "ignoreSkillsOnCallback": {
          "type": "boolean"
        },
        "includeInQuotaImportanceMin": {
          "format": "int32",
          "type": "integer"
        },
        "maxDate": {
          "format": "date-time",
          "type": "string"
        },
        "releaseTime": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "CallbackOptions": {
      "type": "object",
      "properties": {
        "maxTotalCalls": {
          "format": "int32",
          "type": "integer"
        },
        "options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CallbackOption"
          }
        },
        "script": {
          "type": "string"
        },
        "shifts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CallbackShift"
          }
        }
      }
    },
    "CallResultSetting": {
      "type": "object",
      "properties": {
        "allowDropCall": {
          "type": "boolean"
        },
        "allowShowOnCati": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "dropCall": {
          "type": "boolean"
        },
        "result": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            -2,
            -1
          ],
          "type": "integer"
        },
        "showOnCati": {
          "type": "boolean"
        },
        "subResult": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "DialingSettings": {
      "type": "object",
      "properties": {
        "brief": {
          "type": "boolean"
        },
        "dialingMethod": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            254,
            255
          ],
          "type": "integer"
        },
        "predictiveSettings": {
          "$ref": "#/definitions/PredictiveSettings"
        },
        "previewSettings": {
          "$ref": "#/definitions/PreviewSettings"
        },
        "telephonySettings": {
          "$ref": "#/definitions/TelephonySettings"
        }
      }
    },
    "TaskField": {
      "type": "object",
      "properties": {
        "fieldType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4
          ],
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "predefined": {
          "type": "boolean"
        },
        "type": {
          "type": "string"
        },
        "visible": {
          "type": "boolean"
        }
      }
    },
    "ListsSettings": {
      "type": "object",
      "properties": {
        "finishListBeforeUsingNext": {
          "type": "boolean"
        },
        "lists": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ActiveList"
          }
        }
      }
    },
    "SurveyTaskObjectState": {
      "type": "object",
      "properties": {
        "agentsCount": {
          "format": "int32",
          "type": "integer"
        },
        "agentsLoggedOnCount": {
          "format": "int32",
          "type": "integer"
        },
        "fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskField"
          }
        },
        "interviewsCompletedCount": {
          "format": "int64",
          "type": "integer"
        },
        "status": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4
          ],
          "type": "integer"
        }
      }
    },
    "WebConnectionSurvey": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "online": {
          "type": "boolean"
        }
      }
    },
    "CallbackOption": {
      "type": "object",
      "properties": {
        "attempts": {
          "format": "int32",
          "type": "integer"
        },
        "callResult": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            -2,
            -1
          ],
          "type": "integer"
        },
        "nextAttemptDelay": {
          "format": "int32",
          "type": "integer"
        },
        "nextAttemptType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "showNextAttempts": {
          "type": "boolean"
        }
      }
    },
    "CallbackShift": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "lastResort": {
          "type": "boolean"
        },
        "shiftNodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CallbackShiftNode"
          }
        },
        "shiftNumber": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "PredictiveSettings": {
      "type": "object",
      "properties": {
        "answeringMachineMessage": {
          "type": "string"
        },
        "detectAnsweringMachine": {
          "type": "boolean"
        },
        "groupBased": {
          "type": "boolean"
        },
        "maxAbandonedCallLevel": {
          "format": "double",
          "type": "number"
        },
        "maxNuisanceCallLevel": {
          "format": "double",
          "type": "number"
        },
        "maxSimultaneousCalls": {
          "format": "int32",
          "type": "integer"
        },
        "nuisanceCeiling": {
          "format": "int64",
          "type": "integer"
        },
        "nuisanceMessage": {
          "type": "string"
        },
        "nuisanceMessageInterruptable": {
          "type": "boolean"
        },
        "optimalWrapUpTime": {
          "format": "int64",
          "type": "integer"
        },
        "triggersEnabled": {
          "type": "boolean"
        }
      }
    },
    "PreviewSettings": {
      "type": "object",
      "properties": {
        "allowChangeNumber": {
          "type": "boolean"
        },
        "allowFindNumber": {
          "type": "boolean"
        },
        "allowRefuseNumber": {
          "type": "boolean"
        },
        "maxVisibleCalls": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "TelephonySettings": {
      "type": "object",
      "properties": {
        "allowInterruptRecording": {
          "type": "boolean"
        },
        "noAnswerTime": {
          "format": "int64",
          "type": "integer"
        },
        "recordWholeInterview": {
          "type": "boolean"
        },
        "recordWholeInterviewInStereo": {
          "type": "boolean"
        }
      }
    },
    "ActiveList": {
      "type": "object",
      "properties": {
        "active": {
          "type": "boolean"
        },
        "listId": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "CallbackShiftNode": {
      "type": "object",
      "properties": {
        "endTime": {
          "format": "int32",
          "type": "integer"
        },
        "startTime": {
          "format": "int32",
          "type": "integer"
        },
        "weekday": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "IReturnValue[SurveyTaskDto]": {
      "type": "object",
      "properties": {
        "exception": {
          "$ref": "#/definitions/AskiaPortalException",
          "readOnly": true
        },
        "success": {
          "type": "boolean",
          "readOnly": true
        },
        "value": {
          "$ref": "#/definitions/SurveyTaskDto",
          "readOnly": true
        }
      }
    },
    "AskiaPortalException": {
      "type": "object",
      "properties": {
        "askiaPortalCode": {
          "format": "int32",
          "enum": [
            4000,
            4001,
            4002,
            4003,
            4004,
            4005,
            4006,
            4007,
            4008,
            4009,
            4010,
            4011,
            4012,
            4013,
            4014,
            4015,
            4016,
            4017,
            4018,
            4019,
            4020,
            4021,
            4022,
            4023,
            4024,
            4025,
            4026,
            4027,
            4028,
            4029,
            4030,
            4031,
            4032,
            4033,
            4034,
            4035,
            4036,
            4037,
            4038,
            4039,
            4040,
            4041,
            4042,
            4043,
            4044,
            4045,
            4046,
            4047,
            4048,
            4049,
            4050,
            4051,
            4052,
            4053,
            4054,
            4055,
            4056,
            4057,
            4058,
            4059,
            4060,
            4061,
            4062,
            4063,
            4064,
            4065,
            4066,
            4067,
            4068,
            4069,
            4070,
            4071,
            4072,
            4073,
            4074,
            4075,
            4076,
            4077,
            4078,
            4079,
            4080,
            4081,
            4082,
            4083,
            4084,
            4085,
            4086,
            4087,
            4088,
            4089,
            4090,
            4091,
            4092,
            4093,
            4094,
            4095,
            4096,
            4097,
            4098,
            4099,
            4100,
            4101,
            4102,
            4103,
            4104,
            4105,
            4106,
            4107,
            4108,
            4109,
            4110,
            4111,
            4112,
            4113,
            4114,
            4115,
            4116,
            4117,
            4118,
            4119,
            4120,
            4121,
            4122,
            4123,
            4124,
            4125,
            4126,
            4127,
            4128,
            4129,
            4130,
            4131,
            4132,
            4133,
            4134,
            4135,
            4136,
            4137,
            4138,
            4139,
            4140,
            4141,
            4142,
            4143,
            4144,
            4145,
            4146,
            4147,
            4148,
            4149,
            4150,
            4151,
            4152,
            4153,
            4154,
            4155,
            4156,
            4157,
            4158,
            4159,
            4160,
            4161,
            4162,
            4163,
            4164,
            4165,
            4166,
            4167,
            4168,
            4169,
            4170,
            4171,
            4172,
            4173,
            4174,
            4175,
            4176,
            4177,
            4178,
            4179,
            4180,
            4181,
            4182,
            4183,
            5000,
            5001,
            5002,
            5003,
            5004,
            5005,
            5006,
            5007,
            5008,
            5009,
            5010,
            5011,
            5012,
            5013,
            5014,
            5015,
            5016,
            5017,
            5018,
            5019,
            5020,
            5021,
            5022,
            5023,
            5024,
            5025,
            5026,
            5027,
            5028,
            5029,
            5030,
            5031,
            5032,
            5033,
            5034,
            5035,
            5036,
            5037,
            5038,
            6000,
            6001,
            6002,
            6003,
            6004,
            6005,
            6006,
            6007,
            6008,
            6009,
            6010,
            6011,
            6012,
            6013,
            6014,
            9999
          ],
          "type": "integer",
          "readOnly": true
        },
        "code": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "data": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          },
          "readOnly": true
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "readOnly": true
        },
        "helpLink": {
          "type": "string"
        },
        "hResult": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "innerException": {
          "type": "object",
          "readOnly": true
        },
        "key": {
          "type": "string",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "readOnly": true
        },
        "source": {
          "type": "string"
        },
        "stackTrace": {
          "type": "string",
          "readOnly": true
        },
        "translatedMessage": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "QuestionDto": {
      "type": "object",
      "properties": {
        "allowsNoResponse": {
          "description": "Indicates if answering the question is mandatory",
          "type": "boolean"
        },
        "alwaysLinkExclusiveResponses": {
          "description": "Indicates if linked responses always include exclusive responses",
          "type": "boolean"
        },
        "analyseCaption": {
          "description": "Analyse caption of the question",
          "type": "string"
        },
        "anonymisationType": {
          "format": "int32",
          "description": "Type of anonymisation for the question.",
          "type": "integer"
        },
        "categories": {
          "description": "Array of IDs of categories the question belongs to",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "decimalPrecision": {
          "format": "int32",
          "description": "Number of digits after decimal point for numeric questions",
          "type": "integer"
        },
        "firstChildId": {
          "format": "int32",
          "description": "ID of the first child question",
          "type": "integer"
        },
        "id": {
          "format": "int32",
          "description": "ID of the question",
          "type": "integer"
        },
        "impClosedMatchingType": {
          "format": "int32",
          "description": "Type of closed response matching used in question importation",
          "type": "integer"
        },
        "impDatabaseDsn": {
          "description": "Database Server Name (DSN) used in question importation",
          "type": "string"
        },
        "impFieldName": {
          "description": "Name of the field used in question importation",
          "type": "string"
        },
        "impIsInvisibleWhenImported": {
          "description": "Indicates if the question should be invisible in Field if imported",
          "type": "boolean"
        },
        "impPanelUpdateType": {
          "format": "int32",
          "description": "Type of the panel update used in question importation",
          "type": "integer"
        },
        "impSqlQuery": {
          "description": "SQL query used in question importation",
          "type": "string"
        },
        "impType": {
          "format": "int32",
          "description": "Type of the importation for the question",
          "type": "integer"
        },
        "isDeleted": {
          "description": "Indicates if the question is deleted",
          "type": "boolean"
        },
        "isExcludedFromTranslation": {
          "description": "Indicates that the question should not be translated",
          "type": "boolean"
        },
        "isFirstInPage": {
          "description": "Indicates if the question is currently the first one in its page",
          "type": "boolean"
        },
        "isLastInPage": {
          "description": "Indicates if the question is currently the last one in its page",
          "type": "boolean"
        },
        "isLevelDeveloped": {
          "description": "Indicates if the level is developed in analyse",
          "type": "boolean"
        },
        "isLevelLinked": {
          "description": "Indicates if the link is done on the level",
          "type": "boolean"
        },
        "isProbability": {
          "description": "Indicates if the question is a probability question",
          "type": "boolean"
        },
        "isRanked": {
          "description": "Indicates if the question is ranked",
          "type": "boolean"
        },
        "isRecordable": {
          "description": "Indicates if recording could be done on that question (CATI)",
          "type": "boolean"
        },
        "isScaled": {
          "description": "Indicates if the question is scaled",
          "type": "boolean"
        },
        "isVisibleInAnalyse": {
          "description": "Indicates if the question is visible in Analyse",
          "type": "boolean"
        },
        "ivrNumber": {
          "description": "Interactive voice response (IVR) number of the question",
          "type": "string"
        },
        "lastChildId": {
          "format": "int32",
          "description": "ID of the last child question",
          "type": "integer"
        },
        "linkedQuestionId": {
          "format": "int32",
          "description": "Id of the linked (source) question",
          "type": "integer"
        },
        "linkType": {
          "format": "int32",
          "description": "Link type of the question",
          "type": "integer"
        },
        "mainCaption": {
          "description": "The main caption of the question",
          "type": "string"
        },
        "maxResponseCount": {
          "format": "int32",
          "description": "Maximum number of responses",
          "type": "integer"
        },
        "maxValue": {
          "format": "double",
          "description": "Maximum value for numeric questions; maximum number of characters for open questions",
          "type": "number"
        },
        "maxVisibleResponses": {
          "description": "Maximum number of visible responses in a loop iteration",
          "type": "string"
        },
        "mergingPageId": {
          "format": "int32",
          "description": "ID of the merging page if the question's page element is merged",
          "type": "integer"
        },
        "mergingPageSeed": {
          "format": "int32",
          "description": "Client-set value for {Design.Dto.Question.QuestionDto.MergingPageId} used when merging a question page",
          "type": "integer"
        },
        "minResponseCount": {
          "format": "int32",
          "description": "Minimum number of responses",
          "type": "integer"
        },
        "minValue": {
          "format": "double",
          "description": "Minimum value for numeric questions; minimum number of characters for open questions",
          "type": "number"
        },
        "nextSiblingId": {
          "format": "int32",
          "description": "ID of the next sibling question",
          "type": "integer"
        },
        "noResponseEntry": {
          "description": "The entry equivalent to a non-response",
          "type": "string"
        },
        "parentId": {
          "format": "int32",
          "description": "ID of the parent question",
          "type": "integer"
        },
        "pattern": {
          "description": "Regular expressions to validate the response of open questions",
          "type": "string"
        },
        "position": {
          "format": "int32",
          "description": "Position of the question",
          "type": "integer"
        },
        "prevSiblingId": {
          "format": "int32",
          "description": "ID of the previous sibling question",
          "type": "integer"
        },
        "questionIdToIncrement": {
          "format": "int32",
          "description": "Potential id of the question to increment",
          "type": "integer"
        },
        "rotationSeed": {
          "format": "int32",
          "description": "Seed of the random rotation",
          "type": "integer"
        },
        "rotationType": {
          "format": "int32",
          "description": "type of the question",
          "type": "integer"
        },
        "seed": {
          "format": "int32",
          "description": "Client-set value for {Design.Dto.Question.QuestionDto.Id} used when creating a question",
          "type": "integer"
        },
        "shortcut": {
          "description": "Shortcut of the question",
          "type": "string"
        },
        "type": {
          "format": "int32",
          "description": "Type of the question",
          "type": "integer"
        },
        "userData": {
          "description": "Data the user can attach to the question",
          "type": "string"
        },
        "visibility": {
          "format": "int32",
          "description": "Indicates the visibility type of the question.",
          "type": "integer"
        }
      }
    },
    "QuestionsMoveDto": {
      "type": "object",
      "properties": {
        "items": {
          "description": "Array of IDs of questions.",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "parentId": {
          "format": "int32",
          "description": "Id of target parent question.",
          "type": "integer"
        },
        "prevSiblingId": {
          "format": "int32",
          "description": "Id of existing child question of the parent question that will immediately precede the questions being moved.",
          "type": "integer"
        }
      }
    },
    "QuestionTemplateInputDto": {
      "type": "object",
      "properties": {
        "defaultControls": {
          "description": "Specifies the properties of the ADCs extension associated \r\nwith the survey for each question type. Default values are \r\nreplaced with any custom values set for the survey.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/DefaultControlDto"
          }
        },
        "defaultLanguageId": {
          "format": "int32",
          "description": "Specifies the unique identifier of the default language \r\nused by the survey.",
          "type": "integer"
        },
        "defaultPageTemplateId": {
          "format": "int32",
          "description": "Specifies the unique identifier of the default ADP used \r\nby the survey.",
          "type": "integer"
        },
        "defaultPageTemplateProperties": {
          "description": "Specifies the properties of the ADP extension associated \r\nwith the survey. Default values are replaced with any \r\ncustom values set for the survey.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "description": "Specifies the description of the survey.",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "description": "Id of the survey.",
          "type": "integer"
        },
        "languages": {
          "description": "IDs of the languages of the survey.",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "name": {
          "description": "Specifies the name of the survey.",
          "type": "string"
        },
        "themeProperties": {
          "description": "Specifies the properties of the THEME associated with the \r\nsurvey. Default values are replaced with any custom values \r\nset for the survey.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "QuestionTemplateOutputDto": {
      "type": "object",
      "properties": {
        "defaultControls": {
          "description": "Specifies the properties of the ADCs extension associated \r\nwith the survey for each question type. Default values are \r\nreplaced with any custom values set for the survey.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/DefaultControlDto"
          }
        },
        "defaultLanguageId": {
          "format": "int32",
          "description": "Specifies the unique identifier of the default language \r\nused by the survey.",
          "type": "integer"
        },
        "defaultPageTemplateId": {
          "format": "int32",
          "description": "Specifies the unique identifier of the default ADP used \r\nby the survey.",
          "type": "integer"
        },
        "defaultPageTemplateProperties": {
          "description": "Specifies the properties of the ADP extension associated \r\nwith the survey. Default values are replaced with any \r\ncustom values set for the survey.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "description": "Specifies the description of the survey.",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "description": "Id of the survey.",
          "type": "integer"
        },
        "languages": {
          "description": "IDs of the languages of the survey.",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "name": {
          "description": "Specifies the name of the survey.",
          "type": "string"
        },
        "themeProperties": {
          "description": "Specifies the properties of the THEME associated with the \r\nsurvey. Default values are replaced with any custom values \r\nset for the survey.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "SurveyInformationOutputDto": {
      "type": "object",
      "properties": {
        "defaultLanguageId": {
          "format": "int32",
          "description": "Specifies the unique identifier of the default language \r\nused by the survey.",
          "type": "integer"
        },
        "defaultPageTemplateId": {
          "format": "int32",
          "description": "Specifies the unique identifier of the default ADP used \r\nby the survey.",
          "type": "integer"
        },
        "description": {
          "description": "Specifies the description of the survey.",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "description": "Id of the survey.",
          "type": "integer"
        },
        "name": {
          "description": "Specifies the name of the survey.",
          "type": "string"
        }
      }
    },
    "ResourceDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "ID of the response",
          "type": "integer"
        },
        "isDeleted": {
          "description": "Deleting flag.",
          "type": "boolean"
        },
        "name": {
          "description": "Name of the resource",
          "type": "string"
        },
        "resourceFile": {
          "$ref": "#/definitions/ResourceFileDto",
          "description": "The resource file associated with the resource."
        },
        "seed": {
          "format": "int32",
          "description": "Client-set value for {Design.Dto.Resource.ResourceDto.Id} used when creating a question",
          "type": "integer"
        },
        "type": {
          "format": "int32",
          "description": "Type of the resource",
          "type": "integer"
        }
      }
    },
    "ResourceFileDto": {
      "type": "object",
      "properties": {
        "fileLocation": {
          "description": "Location of the resource file.",
          "type": "string"
        },
        "fileName": {
          "description": "Name of the resource file.",
          "type": "string"
        },
        "fileSize": {
          "format": "int32",
          "description": "Size of the resource file in bytes.",
          "type": "integer"
        },
        "fileUri": {
          "description": "Uri that locates the resource file.",
          "type": "string"
        },
        "isExternal": {
          "description": "Indicates if the resource file is stored externally.",
          "type": "boolean"
        },
        "languageId": {
          "format": "int32",
          "description": "ID of the language associated with the resource file.",
          "type": "integer"
        },
        "resourceId": {
          "format": "int32",
          "description": "ID of the resource associated with the resource file.",
          "type": "integer"
        }
      }
    },
    "ResponseLinkOutputDto": {
      "type": "object",
      "properties": {
        "id": {
          "description": "ID of the response link which is a concatenation of \r\n{Design.Dto.ResponseLink.ResponseLinkDto.TargetQuestionId} + '_' +\r\n{Design.Dto.ResponseLink.ResponseLinkDto.SourceQuestionId} + '_' +\r\n{Design.Dto.ResponseLink.ResponseLinkDto.ResponseId}",
          "type": "string"
        },
        "responseId": {
          "format": "int32",
          "description": "The unique identifier of the response to which this link belong.",
          "type": "integer"
        },
        "sourceQuestionId": {
          "format": "int32",
          "description": "The original question unique identifier.",
          "type": "integer"
        },
        "targetQuestionId": {
          "format": "int32",
          "description": "The target question unique identifier.",
          "type": "integer"
        },
        "visibility": {
          "format": "int32",
          "description": "The visibility of the response when used as link.",
          "type": "integer"
        }
      }
    },
    "ResponseLinkInptuDto": {
      "type": "object",
      "properties": {
        "id": {
          "description": "ID of the response link which is a concatenation of \r\n{Design.Dto.ResponseLink.ResponseLinkDto.TargetQuestionId} + '_' +\r\n{Design.Dto.ResponseLink.ResponseLinkDto.SourceQuestionId} + '_' +\r\n{Design.Dto.ResponseLink.ResponseLinkDto.ResponseId}",
          "type": "string"
        },
        "responseId": {
          "format": "int32",
          "description": "The unique identifier of the response to which this link belong.",
          "type": "integer"
        },
        "sourceQuestionId": {
          "format": "int32",
          "description": "The original question unique identifier.",
          "type": "integer"
        },
        "targetQuestionId": {
          "format": "int32",
          "description": "The target question unique identifier.",
          "type": "integer"
        },
        "visibility": {
          "format": "int32",
          "description": "The visibility of the response when used as link.",
          "type": "integer"
        }
      }
    },
    "ResponseDto": {
      "type": "object",
      "properties": {
        "baseType": {
          "format": "int32",
          "description": "Base type of the response, one of normal, no response and not asked.",
          "type": "integer"
        },
        "entryCode": {
          "description": "Entry code of the response.",
          "type": "string"
        },
        "factor": {
          "format": "double",
          "description": "Factor assigned to the response.",
          "type": "number"
        },
        "firstChildId": {
          "format": "int32",
          "description": "ID of the first child response.",
          "type": "integer"
        },
        "id": {
          "format": "int32",
          "description": "ID of the response",
          "type": "integer"
        },
        "isDeleted": {
          "description": "Indicates if the response is deleted.",
          "type": "boolean"
        },
        "isExcludedFromTranslation": {
          "description": "Indicates if the response is excluded from translation.",
          "type": "boolean"
        },
        "isExclusive": {
          "description": "Indicates if the response is exclusive and cannot be selected simultaneously with other responses.",
          "type": "boolean"
        },
        "isSelectable": {
          "description": "Indicates if the response is selectable.",
          "type": "boolean"
        },
        "lastChildId": {
          "format": "int32",
          "description": "ID of the last child response.",
          "type": "integer"
        },
        "mainCaption": {
          "description": "The main caption of the response for the current context.",
          "type": "string"
        },
        "nextSiblingId": {
          "format": "int32",
          "description": "ID of the next sibling response.",
          "type": "integer"
        },
        "parentId": {
          "format": "int32",
          "description": "ID of the parent response.",
          "type": "integer"
        },
        "position": {
          "format": "int32",
          "description": "Position of the response in its parent's list of child response.",
          "type": "integer"
        },
        "prevSiblingId": {
          "format": "int32",
          "description": "ID of the previous sibling response.",
          "type": "integer"
        },
        "questionId": {
          "format": "int32",
          "description": "ID of the question the response belongs to.",
          "type": "integer"
        },
        "resourceId": {
          "format": "int32",
          "description": "Id of the resource used by the response.",
          "type": "integer"
        },
        "rotationBehaviour": {
          "format": "int32",
          "description": "Type of the rotation behaviour of the response.",
          "type": "integer"
        },
        "seed": {
          "format": "int32",
          "description": "Client-set value for {Design.Dto.Response.ResponseDto.Id} used when creating a response.",
          "type": "integer"
        },
        "semiOpenQuestionId": {
          "format": "int32",
          "description": "Id of the semi-open question for the response.",
          "type": "integer"
        },
        "type": {
          "format": "int32",
          "description": "Type of the response.",
          "type": "integer"
        },
        "userData": {
          "description": "User data for the response.",
          "type": "string"
        }
      }
    },
    "ResponsesMoveDto": {
      "type": "object",
      "properties": {
        "items": {
          "description": "Array of IDs of responses.",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "parentId": {
          "format": "int32",
          "description": "Id of target parent response.",
          "type": "integer"
        },
        "prevSiblingId": {
          "format": "int32",
          "description": "Id of existing child response of the parent response that will immediately precede the responses being moved.",
          "type": "integer"
        }
      }
    },
    "RoutingDto": {
      "type": "object",
      "properties": {
        "actionParameters": {
          "description": "Collection of the routing action parameters associated with the routing.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "actionType": {
          "format": "int32",
          "description": "Type of action the routing performs when executed.\r\nOne of {AskiaCore.RoutingActionType}.",
          "type": "integer"
        },
        "captions": {
          "$ref": "#/definitions/RoutingCaptionsDto",
          "description": "Composite class of the routing captions associated with the routing."
        },
        "condition": {
          "description": "AskiaScript determining the condition the routing must meet\r\nto be executed.",
          "type": "string"
        },
        "conditionType": {
          "format": "int32",
          "description": "Type of condition evaluated before the routing can be executed.\r\nOne of {AskiaCore.RoutingConditionType}.",
          "type": "integer"
        },
        "id": {
          "format": "int32",
          "description": "ID of the routing.",
          "type": "integer"
        },
        "isAfter": {
          "description": "True if the routing is run after the question is displayed.",
          "type": "boolean"
        },
        "isBefore": {
          "description": "True if the routing is run before the question is displayed.",
          "type": "boolean"
        },
        "isDuring": {
          "description": "True if the routing is run during the question display.",
          "type": "boolean"
        },
        "isEdits": {
          "description": "True if the routing is run during edits.",
          "type": "boolean"
        },
        "isOnError": {
          "description": "True if the routing is triggered by an error occurring.",
          "type": "boolean"
        },
        "isRunIfNotAsked": {
          "description": "True if the routing is run when the associated question\r\nis not asked.",
          "type": "boolean"
        },
        "name": {
          "description": "Name of the routing.",
          "type": "string"
        },
        "position": {
          "format": "int32",
          "description": "Position of the routing.",
          "type": "integer"
        },
        "seed": {
          "format": "int32",
          "description": "Client-set value for {Design.Dto.Routing.RoutingDto.Id} used when creating a routing.",
          "type": "integer"
        },
        "startQuestionId": {
          "format": "int32",
          "description": "ID of the question the routing is triggered by.",
          "type": "integer"
        },
        "startType": {
          "format": "int32",
          "description": "How the routing is triggered.",
          "type": "integer"
        },
        "targets": {
          "$ref": "#/definitions/RoutingTargetDto",
          "description": "Bag containing the routing targets associated with the routing."
        }
      }
    },
    "RoutingCaptionsDto": {
      "type": "object",
      "properties": {
        "mailBcc": {
          "type": "string"
        },
        "mailFrom": {
          "type": "string"
        },
        "mailMessage": {
          "type": "string"
        },
        "mailSubject": {
          "type": "string"
        },
        "mailTo": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "RoutingTargetDto": {
      "type": "object",
      "properties": {
        "languageId": {
          "format": "int32",
          "type": "integer"
        },
        "questionId": {
          "format": "int32",
          "type": "integer"
        },
        "resourceId": {
          "format": "int32",
          "type": "integer"
        },
        "responseIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "responseNotToAskIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "scenarioId": {
          "format": "int32",
          "type": "integer"
        },
        "surveyMilestoneId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "MethodResultDto": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDto"
        },
        "success": {
          "type": "boolean"
        }
      }
    },
    "ErrorDto": {
      "type": "object",
      "properties": {
        "code": {
          "format": "int32",
          "type": "integer"
        },
        "extraDescription": {
          "type": "string"
        },
        "length": {
          "format": "int32",
          "type": "integer"
        },
        "source": {
          "type": "string"
        },
        "startingPosition": {
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "RoutingsMoveDto": {
      "type": "object",
      "properties": {
        "items": {
          "description": "Array of IDs of questions.",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "position": {
          "format": "int32",
          "description": "Position where the routings should be moved to.",
          "type": "integer"
        },
        "startQuestionId": {
          "format": "int32",
          "description": "Id of the question where the routings will be triggered, if any.",
          "type": "integer"
        },
        "startType": {
          "format": "int32",
          "description": "How the routing is triggered.",
          "type": "integer"
        }
      }
    },
    "ScenarioEntityOutputDto": {
      "type": "object",
      "properties": {
        "entityId": {
          "format": "int32",
          "description": "The unique identifier of the linked entity.",
          "type": "integer"
        },
        "entityType": {
          "format": "int32",
          "description": "The type of the entity linked to the `ScenarioId`.",
          "type": "integer"
        },
        "id": {
          "description": "ID of the scenario entity which is a concatenation of \r\n{Design.Dto.Scenario.ScenarioEntityDto.EntityType} + '_' +\r\n{Design.Dto.Scenario.ScenarioEntityDto.EntityId} + '_' +\r\n{Design.Dto.Scenario.ScenarioEntityDto.ScenarioId}\r\nOnly used by the client side.",
          "type": "string"
        },
        "scenarioId": {
          "format": "int32",
          "description": "The unique identifier of `Scenario` linked with the entity.",
          "type": "integer"
        }
      }
    },
    "ScenarioEntityInputDto": {
      "type": "object",
      "properties": {
        "entityId": {
          "format": "int32",
          "description": "The unique identifier of the linked entity.",
          "type": "integer"
        },
        "entityType": {
          "format": "int32",
          "description": "The type of the entity linked to the `ScenarioId`.",
          "type": "integer"
        },
        "id": {
          "description": "ID of the scenario entity which is a concatenation of \r\n{Design.Dto.Scenario.ScenarioEntityDto.EntityType} + '_' +\r\n{Design.Dto.Scenario.ScenarioEntityDto.EntityId} + '_' +\r\n{Design.Dto.Scenario.ScenarioEntityDto.ScenarioId}\r\nOnly used by the client side.",
          "type": "string"
        },
        "scenarioId": {
          "format": "int32",
          "description": "The unique identifier of `Scenario` linked with the entity.",
          "type": "integer"
        }
      }
    },
    "ScenarioOutputDto": {
      "type": "object",
      "properties": {
        "description": {
          "description": "Specifies the description of the scenario.",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "description": "Specifies the unique identifier of the scenario.",
          "type": "integer"
        },
        "name": {
          "description": "Specifies the name of the scenario.",
          "type": "string"
        }
      }
    },
    "ScenarioInputDto": {
      "type": "object",
      "properties": {
        "description": {
          "description": "Specifies the description of the scenario.",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "description": "Specifies the unique identifier of the scenario.",
          "type": "integer"
        },
        "name": {
          "description": "Specifies the name of the scenario.",
          "type": "string"
        }
      }
    },
    "SurveyInputDto[ISurvey]": {
      "description": "Representation of the survey for the input.",
      "type": "object",
      "properties": {
        "defaultControls": {
          "description": "Specifies the properties of the ADCs extension associated \r\nwith the survey for each question type. Default values are \r\nreplaced with any custom values set for the survey.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/DefaultControlDto"
          }
        },
        "defaultLanguageId": {
          "format": "int32",
          "description": "Specifies the unique identifier of the default language \r\nused by the survey.",
          "type": "integer"
        },
        "defaultPageTemplateId": {
          "format": "int32",
          "description": "Specifies the unique identifier of the default ADP used \r\nby the survey.",
          "type": "integer"
        },
        "defaultPageTemplateProperties": {
          "description": "Specifies the properties of the ADP extension associated \r\nwith the survey. Default values are replaced with any \r\ncustom values set for the survey.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "description": "Specifies the description of the survey.",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "description": "Id of the survey.",
          "type": "integer"
        },
        "languages": {
          "description": "IDs of the languages of the survey.",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "name": {
          "description": "Specifies the name of the survey.",
          "type": "string"
        },
        "themeProperties": {
          "description": "Specifies the properties of the THEME associated with the \r\nsurvey. Default values are replaced with any custom values \r\nset for the survey.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "SurveyOutputDto[ISurvey]": {
      "description": "Representation of the survey for the output.",
      "type": "object",
      "properties": {
        "defaultControls": {
          "description": "Specifies the properties of the ADCs extension associated \r\nwith the survey for each question type. Default values are \r\nreplaced with any custom values set for the survey.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/DefaultControlDto"
          }
        },
        "defaultLanguageId": {
          "format": "int32",
          "description": "Specifies the unique identifier of the default language \r\nused by the survey.",
          "type": "integer"
        },
        "defaultPageTemplateId": {
          "format": "int32",
          "description": "Specifies the unique identifier of the default ADP used \r\nby the survey.",
          "type": "integer"
        },
        "defaultPageTemplateProperties": {
          "description": "Specifies the properties of the ADP extension associated \r\nwith the survey. Default values are replaced with any \r\ncustom values set for the survey.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "description": "Specifies the description of the survey.",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "description": "Id of the survey.",
          "type": "integer"
        },
        "languages": {
          "description": "IDs of the languages of the survey.",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "name": {
          "description": "Specifies the name of the survey.",
          "type": "string"
        },
        "themeProperties": {
          "description": "Specifies the properties of the THEME associated with the \r\nsurvey. Default values are replaced with any custom values \r\nset for the survey.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "SurveyTemplateInputDto": {
      "type": "object",
      "properties": {
        "defaultControls": {
          "description": "Specifies the properties of the ADCs extension associated \r\nwith the survey for each question type. Default values are \r\nreplaced with any custom values set for the survey.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/DefaultControlDto"
          }
        },
        "defaultLanguageId": {
          "format": "int32",
          "description": "Specifies the unique identifier of the default language \r\nused by the survey.",
          "type": "integer"
        },
        "defaultPageTemplateId": {
          "format": "int32",
          "description": "Specifies the unique identifier of the default ADP used \r\nby the survey.",
          "type": "integer"
        },
        "defaultPageTemplateProperties": {
          "description": "Specifies the properties of the ADP extension associated \r\nwith the survey. Default values are replaced with any \r\ncustom values set for the survey.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "description": "Specifies the description of the survey.",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "description": "Id of the survey.",
          "type": "integer"
        },
        "languages": {
          "description": "IDs of the languages of the survey.",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "name": {
          "description": "Specifies the name of the survey.",
          "type": "string"
        },
        "themeProperties": {
          "description": "Specifies the properties of the THEME associated with the \r\nsurvey. Default values are replaced with any custom values \r\nset for the survey.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "SurveyTemplateOutputDto": {
      "type": "object",
      "properties": {
        "defaultControls": {
          "description": "Specifies the properties of the ADCs extension associated \r\nwith the survey for each question type. Default values are \r\nreplaced with any custom values set for the survey.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/DefaultControlDto"
          }
        },
        "defaultLanguageId": {
          "format": "int32",
          "description": "Specifies the unique identifier of the default language \r\nused by the survey.",
          "type": "integer"
        },
        "defaultPageTemplateId": {
          "format": "int32",
          "description": "Specifies the unique identifier of the default ADP used \r\nby the survey.",
          "type": "integer"
        },
        "defaultPageTemplateProperties": {
          "description": "Specifies the properties of the ADP extension associated \r\nwith the survey. Default values are replaced with any \r\ncustom values set for the survey.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "description": "Specifies the description of the survey.",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "description": "Id of the survey.",
          "type": "integer"
        },
        "languages": {
          "description": "IDs of the languages of the survey.",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "name": {
          "description": "Specifies the name of the survey.",
          "type": "string"
        },
        "themeProperties": {
          "description": "Specifies the properties of the THEME associated with the \r\nsurvey. Default values are replaced with any custom values \r\nset for the survey.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "KeyValuePair[String,String]": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "readOnly": true
        },
        "value": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ThemeOutputDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "Specifies the unique identifier of this theme.",
          "type": "integer"
        },
        "name": {
          "description": "Specifies the name of this theme.",
          "type": "string"
        },
        "properties": {
          "description": "Specifies the property values associated with this theme. \r\nDefault values are replaced with any custom values \r\nset for this theme.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    }
  }
}
